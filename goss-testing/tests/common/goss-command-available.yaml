#
# MIT License
#
# (C) Copyright 2014-2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#

{{ $logrun := .Env.GOSS_BASE | printf "%s/scripts/log_run.sh" }}
command:
    {{range $index, $command := index .Vars "commands"}}
        # Split the command path into a list, take the last field (the command base name), and convert it to lowercase
        {{ $command_base_name := splitList "/" $command | last | toLower }}

        # If there are any non-alphanumeric characters, convert them to underscores, and then strip away any
        # leading or trailing underscores
        {{ if regexMatch "[^a-z0-9]" $command_base_name }}
            {{ $command_base_name = regexReplaceAll "[^a-z0-9]" $command_base_name "_" | trimAll "_" }}

            # If there are any strings of one or more consecutive underscores, replace them with a single underscore
            {{ if contains "__" $command_base_name }}
                {{ $command_base_name = regexReplaceAll "_{2,}" $command_base_name "_" }}
            {{end}}

        {{end}}

        {{ $testlabel := $command_base_name | printf "command_available_%d_%s" $index }}
        {{$testlabel}}:
            title: Command '{{$command}}' Available
            meta:
                desc: Validates that '{{$command}}' is available and executes successfully on the local system.
                sev: 0
            exec: |-
                "{{$logrun}}" -l "{{$testlabel}}" {{$command}}
            exit-status: 0
            # Under normal circumstances, these commands should not require such a long timeout value. However,
            # some of them (for example, 'cray --version') are Python scripts which, on their first execution,
            # must compile bytecode before executing. When this timeout was 10 seconds, we observed occasional
            # timeouts because of this. Therefore, the timeout is now 30 seconds.
            timeout: 30000
            skip: false
    {{end}}