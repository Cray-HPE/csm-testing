# (C) Copyright 2014-2022 Hewlett Packard Enterprise Development LP.
#
# MIT License
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

service:
  etcd:
    title: Service 'etcd' Running
    meta:
      desc: Checks whether etcd service is running.
      sev: 0
    enabled: true
    running: true

file:
  /etc/kubernetes/pki/etcd/ca.crt:
    title: etcd ca.crt file exists
    meta:
      desc: This file should be created when the master is initialized or joins the Kubernetes cluster.
      sev: 0
    exists: true
  /etc/kubernetes/pki/apiserver-etcd-client.crt:
    title: etcd client crt file exists
    meta:
      desc: This file should be created when the master is initialized or joins the Kubernetes cluster.
      sev: 0
    exists: true
  /etc/kubernetes/pki/apiserver-etcd-client.key:
    title: etcd client key file exists
    meta:
      desc: This file should be created when the master is initialized or joins the Kubernetes cluster.
      sev: 0
    exists: true
{{ $logrun := .Env.GOSS_BASE | printf "%s/scripts/log_run.sh" }}
command:
    {{ $testlabel := "k8s_etcd_endpoint_health" }}
    {{$testlabel}}:
        title: Validate the Kubernetes etcd on this node is healthy.
        meta:
            desc: Checks that Kubernetes' etcd instance on this node must be healthy.
            sev: 0
        exec: |-
            ETCDCTL_API=3 "{{$logrun}}" -l "{{$testlabel}}" \
                etcdctl endpoint health \
                    --cacert=/etc/kubernetes/pki/etcd/ca.crt \
                    --cert=/etc/kubernetes/pki/apiserver-etcd-client.crt \
                    --key=/etc/kubernetes/pki/apiserver-etcd-client.key
        exit-status: 0
