#
# MIT License
#
# (C) Copyright 2014-2023 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#

# This test is run during stage 0 of a CSM upgrade to CSM 1.5.x.
# The CSM services have not yet been upgraded by stage 0, HOWEVER the
# source CSM version of the upgrade may be CSM 1.4 or it may be CSM 1.5.
#
# The deployment of the iPXE service changed from CSM 1.4 to CSM 1.5, so
# this test calls a script which checks to make sure one of the two styles of
# iPXE deployment is running.
{{ $scripts := .Env.GOSS_BASE | printf "%s/scripts" }}
{{ $logrun := $scripts | printf "%s/log_run.sh" }}
{{ $check_ipxe_x86_64_pod_is_running := $scripts | printf "%s/check_ipxe_x86_64_pod_is_running.sh" }}
command:
    {{ $testlabel := "k8s_service_ipxe_running_pre_upgrade" }}
    {{$testlabel}}:
        title: Kubernetes Service 'cray-ipxe' Is Running Pre-Upgrade
        meta:
            desc: If this test fails, look at the state of the iPXE pod (kubectl get po -n services | grep cray-ipxe) to investigate.
            sev: 0
        exec: |-
            "{{$logrun}}" -l "{{$testlabel}}" \
                "{{$check_ipxe_x86_64_pod_is_running}}" -v
        exit-status: 0
        timeout: 20000
        skip: false
