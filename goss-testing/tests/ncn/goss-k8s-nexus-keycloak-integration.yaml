#
# MIT License
#
# (C) Copyright 2023 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#

{{ $kubectl := .Vars.kubectl }}
command:
  k8s_nexus_keycloak_integration:
    title: Kubernetes Secret 'nexus-keycloak-realm-config' matches 'system-nexus-client-auth'
    meta:
      desc: Validates that Kubernetes secret 'nexus-keycloak-realm-config' matches 'system-nexus-client-auth'. If test fails see /usr/share/doc/csm/troubleshooting/known_issues/nexus_fail_authentication_with_keycloak_user.md
      sev: 0
    exec: |-
      # Set pipefail so that if any commands in the command pipeline fail, the test will fail
      set -eo pipefail
      nexus_secret=$("{{$kubectl}}" get secret -n nexus nexus-keycloak-realm-config -o jsonpath='{.data.keycloak\.json}' | base64 -d | jq -r '.credentials.secret')
      keycloak_secret=$("{{$kubectl}}" get secret -n nexus system-nexus-client-auth -o jsonpath='{.data.client-secret}' | base64 -d)
      if [ "$nexus_secret" != "$keycloak_secret"  ]; then echo FAIL; fi
    exit-status: 0
    stdout:
    - "!FAIL"
    timeout: 20000
    skip: false