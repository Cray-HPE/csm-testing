#
# MIT License
#
# (C) Copyright 2014-2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
command:
  k8s_postgres_{{.Env.CLUSTER_NAME}}_running:
    title: Kubernetes Postgres '{{.Env.CLUSTER_NAME}}' Is Running
    meta:
      desc: If this test fails, look at the state of the postgres pods (kubectl get po -n {{.Env.CLUSTER_NS}} | grep {{.Env.CLUSTER_NAME}}) to investigate.
      sev: 0
    exec: |-
          numOfPostgres=$(kubectl get po -n {{.Env.CLUSTER_NS}} | grep {{.Env.CLUSTER_NAME}} | grep Running | grep -v pooler | wc -l)
          if [[ $numOfPostgres -lt 3 ]]; then
            echo "Not enought postgres pods running"
            exit 1
          fi 
          
          numOfPostgresPooler=$(kubectl get po -n {{.Env.CLUSTER_NS}} | grep {{.Env.CLUSTER_NAME}} | grep Running | grep -v pooler | wc -l)
          if [[ ! -z $numOfPostgresPooler ]]; then
            if [[ $numOfPostgresPooler -lt 3 ]]; then
              echo "Not enought postgres pooler pods running"
            exit 1
          fi 
          fi
          echo "PASS"
    exit-status: 0
    stdout:
      - PASS
    timeout: 1000
    skip: false
