# (C) Copyright 2014-2022 Hewlett Packard Enterprise Development LP.
#
# MIT License
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

command:
  k8s_postgres_{{.Env.CLUSTER_NAME}}_has_leader:
    title: Kubernetes Postgres '{{.Env.CLUSTER_NAME}}' Has a Leader
    meta:
      desc: If this test fails, look at the state of the postgres pods (/opt/cray/platform-utils/ncnPostgresHealthChecks.sh) to investigate.
      sev: 0
    exec: |-
        kubectl get po -n {{.Env.CLUSTER_NS}} | grep {{.Env.CLUSTER_NAME}} | grep Running
        members=$(kubectl get pod -n {{.Env.CLUSTER_NS}} -l "cluster-name={{.Env.CLUSTER_NAME}},application=spilo" \
                           -o custom-columns=NAME:.metadata.name --no-headers)
        Delay=10
        for member_i in $members
        do
            patronictlVersion=$(timeout -k 4 --preserve-status --foreground $Delay \
                                kubectl exec -it -n {{.Env.CLUSTER_NS}} -c postgres $member_i -- patronictl version | \
                                awk '{ sub("\r", "", $3); print $3 }'; )
            # If no response, check the next cluster member:
            if [[ -n $patronictlVersion ]]
            then
                break
            else
                continue
            fi
        done
        patronictlCmd=""
        case $patronictlVersion in
            "1.6.4" )
                patronictlCmd="\$(timeout -k 4 --preserve-status --foreground \
                                $Delay kubectl -n {{.Env.CLUSTER_NS}} exec \$m -- patronictl list 2>/dev/null | awk ' \$8 == \
                                 \"Leader\" && \$10 == \"running\" {print \$4}')"
                ;;
            "1.6.5" )
                patronictlCmd="\$(timeout -k 4 --preserve-status --foreground \
                                $Delay kubectl -n {{.Env.CLUSTER_NS}} exec \$m -- patronictl list 2>/dev/null | awk ' \$6 == \
                                \"Leader\" && \$8 == \"running\" {print \$2}')"
                ;;
            * )
                echo "Unexpected Patronictl version \"$patronictlVersion\" for \
                     the {{.Env.CLUSTER_NAME}} postgres clusters in the {{.Env.CLUSTER_NS}} namespace."
                echo
                exit 1
                continue
                ;;
        esac
        # Find the leader:
        podDescribe=" non-leader"
        for m in $members
        do
            eval leader="$patronictlCmd"
            if [ -n "$leader" ]
            then
                break;
            fi
        done
        if [ -z "$leader" ]; then
            exit 1
        else
            echo "Found Leader"
            kubectl get pods -A -o wide | grep "NAME\|{{.Env.CLUSTER_NAME}}"
            
            kubectl logs -n {{.Env.CLUSTER_NS}} $leader postgres | \
                awk '{$1="";$2=""; print $line}' | egrep "INFO|ERROR" \
                | egrep -v "NewConnection|bootstrapping" | sort -u \
                |  grep "i am the leader with the lock"
            echo "Leader log: i am the leader with the lock"
        fi
    exit-status: 0
    stdout:
    - "Found Leader"
    - "Leader log: i am the leader with the lock"
    timeout: 10000
    skip: false
