#
# MIT License
#
# (C) Copyright 2021-2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#

{{ $this_node_name := .Env.HOSTNAME }}
{{ $scripts := .Env.GOSS_BASE | printf "%s/scripts" }}
{{ $logrun := $scripts | printf "%s/log_run.sh" }}
{{ $rgw_health_check := $scripts | printf "%s/rgw_health_check.sh" }}
command:
    {{ $testlabel := "verify_rgw_health" }}
    {{$testlabel}}:
        title: Verify rgw is healthy
        meta:
            desc: Check that rgw-vip and all storage nodes are up. Check rgw endpoint health by uploading and downloading a file from a bucket. For more detailed output, run 'GOSS_BASE={{.Env.GOSS_BASE}} {{$rgw_health_check}}'
            sev: 0
        {{if $this_node_name | regexMatch "^ncn-(m|s00[1-3])"}}
        # We expect the 'ceph.admin.keyring' on the first three storage nodes
        # and any master node. That keyring is necessary for this test.
        exec: |-
            "{{$logrun}}" -l "{{$testlabel}}" \
                "{{$rgw_health_check}}"
        {{else}}
        exec: |-
            "{{$logrun}}" -l "{{$testlabel}}" \
                "{{$rgw_health_check}}" --minimal-check
        {{end}}
        exit-status: 0
        timeout: 180000
        skip: false
