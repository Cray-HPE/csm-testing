# (C) Copyright 2014-2022 Hewlett Packard Enterprise Development LP.
#
# MIT License
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

{{ $kubectl := .Vars.kubectl }}
command:
    k8s_keycloak_healthy:
        title: Validate the keycloak service in kubernetes is in healthy state
        meta:
            desc: If this test fails, look at the state of the keycloak pods (kubectl get po -n services | grep keycloak) to determine why the test was unable to get a token.
            sev: 0
        exec: |-
            set -eo pipefail
            secret=$(
                "{{$kubectl}}" get secrets admin-client-auth -ojsonpath='{.data.client-secret}' | 
                base64 -d
            )
            curl -k -s -d grant_type=client_credentials \
                -d client_id=admin-client \
                -d client_secret="$secret" \
                https://api-gw-service-nmn.local/keycloak/realms/shasta/protocol/openid-connect/token
        exit-status: 0
        timeout: 5000
        skip: false
