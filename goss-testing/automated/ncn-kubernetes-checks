#!/usr/bin/env bash
#
# (C) Copyright 2021-2022 Hewlett Packard Enterprise Development LP.
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

# GOSS_BASE isn't set by default on the NCNs, just on LiveCD
[[ -z $GOSS_BASE ]] && export GOSS_BASE=/opt/cray/tests/install/ncn

export GOSS_LOG_BASE_DIR=/opt/cray/tests/install/logs

export GOSS_VARS=/tmp/goss-variables-$(date +%s)-temp.yaml

# files needed to run from livecd
kube_creds=/root/.kube/config
pit_file=/etc/pit-release

if [ -f $pit_file ]; then
  # running on a pit node
  cat $GOSS_BASE/vars/variables-livecd.yaml > $GOSS_VARS
else
  # running on an NCN
  cat $GOSS_BASE/vars/variables-ncn.yaml > $GOSS_VARS
fi
echo "" >> $GOSS_VARS

if [ -f "/etc/dnsmasq.d/statics.conf" ]; then
  k8s_nodes=$(cat /etc/dnsmasq.d/statics.conf | grep -ohE 'ncn-[mw]([0-9]{3})' | grep -v ncn-m001 | awk '!a[$0]++')
else
  k8s_nodes=$(cat /etc/hosts | grep -ohE 'ncn-[mw]([0-9]{3})' | awk '!a[$0]++')
fi

# add node names from statics.conf to temp variables file
if [ `echo $k8s_nodes | wc -w` -ne 0 ];then
  echo "" >> $GOSS_VARS
  echo "k8s_nodes:" >> $GOSS_VARS
  for node in $k8s_nodes; do
    echo "  - $node" >> $GOSS_VARS
  done
else
  echo "Node names could not be found in files! Exiting now."
  exit 1
fi

source $GOSS_BASE/automated/run-ncn-tests.sh

if [ -f $pit_file ]; then
  # running on a pit node
  echo $'\e[1;33m'PIT Node Kubernetes Checks$'\e[0m'
  echo $'\e[1;33m'--------------------------$'\e[0m'
  if [ -f $kube_creds ]; then
    # run livecd local kubernetes tests
    k8s_local_tests
  else
    # We preface this warning with 'Total Tests:' to make it more visible, because the install documentation
    # has the user grep for that string to review the results of the tests.
    echo $'\e[1;31m'Total Tests: WARNING: Unable to run local Kubernetes checks because $kube_creds does not exist$'\e[0m'
    echo
  fi
else
  # run tests from an ncn
  echo $'\e[1;33m'Kubernetes Cluster Node Checks$'\e[0m'
  echo $'\e[1;33m'------------------------------$'\e[0m'
  k8s_local_tests
fi

# master nodes
echo $'\e[1;33m'Master Node Kubernetes Checks$'\e[0m'
echo $'\e[1;33m'-----------------------------$'\e[0m'

# find the master node names and query the server endpoint
if [ -f "/etc/dnsmasq.d/statics.conf" ]; then
  nodes=$(cat /etc/dnsmasq.d/statics.conf | grep -ohE "ncn-m([0-9]{3})" | grep -v ncn-m001 | awk '!a[$0]++')
  for node in $nodes ; do \
    run_ncn_tests "$node" "8996" "ncn-kubernetes-tests-master" ; \
  done
else
  nodes=$(cat /etc/hosts | grep -ohE "ncn-m([0-9]{3})" | grep -v ncn-m001 | awk '!a[$0]++')
  for node in $nodes ; do \
    run_ncn_tests "$node" "8996" "ncn-kubernetes-tests-master" ; \
    run_ncn_tests "$node" "9007" "ncn-afterpitreboot-kubernetes-tests-master" ; \
  done
fi
echo

# worker nodes
echo $'\e[1;33m'Worker Node Kubernetes Checks$'\e[0m'
echo $'\e[1;33m'-----------------------------$'\e[0m'

# find the worker node names and query the server endpoint
if [ -f "/etc/dnsmasq.d/statics.conf" ]; then
  nodes=$(cat /etc/dnsmasq.d/statics.conf | grep -ohE "ncn-w([0-9]{3})" | awk '!a[$0]++')
  for node in $nodes ; do \
    run_ncn_tests "$node" "8998" "ncn-kubernetes-tests-worker"; \
  done
else
  nodes=$(cat /etc/hosts | grep -ohE "ncn-w([0-9]{3})" | awk '!a[$0]++')
  for node in $nodes ; do \
    run_ncn_tests "$node" "8998" "ncn-kubernetes-tests-worker" ; \
    run_ncn_tests "$node" "9008" "ncn-afterpitreboot-kubernetes-tests-worker" ; \
  done
fi

exit
