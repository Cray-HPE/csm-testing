#!/usr/bin/env bash
#
# MIT License
#
# (C) Copyright 2021-2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

# Many functions and variables used in this script are defined/set/exported
# in the run-ncn-tests.sh library

echo $'\e[1;33m'Kubernetes Checks$'\e[0m'
echo $'\e[1;33m'------------------------------$'\e[0m'
echo

# The run-ncn-tests.sh library is located in the same directory as the
# current script. Using dirname like this could produce a relative path,
# but that's fine, since we just want to source this library script.
# Note that this method is not infallible -- in particular, some symbolic
# links can mess it up. But that won't be the case if this was installed
# with the csm-testing RPM.
source "$(dirname -- "$0")/run-ncn-tests.sh"

# Get master and worker node URLs
master_nodes=$(get_ncns --masters --exclude-pit) ||
    err_exit "Unable to get list of master nodes"

ready_master_node=$(get_ready_k8s_node ${master_nodes}) ||
	exit 1

worker_nodes=$(get_ncns --workers) ||
    err_exit "Unable to get list of worker nodes"

ready_worker_node=$(get_ready_k8s_node ${worker_nodes}) ||
	exit 1

# Add k8s test endpoints for tests that run on all master nodes
master_test_urls=$(goss_endpoint_urls ncn-kubernetes-tests-master.yaml ${master_nodes}) ||
    err_exit "Error finding test URLs for ncn-kubernetes-tests-master"

# Add k8s test endpoints for tests that only run on a single master node
single_master_test_url=$(goss_endpoint_urls ncn-kubernetes-tests-master-single.yaml ${ready_master_node}) ||
    err_exit "Error finding test URL for ncn-kubernetes-tests-master-single"

# Add k8s test endpoints for tests that run on all worker nodes
worker_test_urls=$(goss_endpoint_urls ncn-kubernetes-tests-worker.yaml ${worker_nodes}) ||
    err_exit "Error finding test URLs for ncn-kubernetes-tests-worker"

# Add k8s test endpoints for tests that only run on a single master node
single_worker_test_url=$(goss_endpoint_urls ncn-kubernetes-tests-worker-single.yaml ${ready_worker_node}) ||
    err_exit "Error finding test URL for ncn-kubernetes-tests-worker-single"

if is_pit_node ; then
    # running on a pit node

    # file needed to run from livecd
    kube_creds=/root/.kube/config

    if is_nonempty_file "${kube_creds}"; then
        # run livecd local Kubernetes cluster tests
        run_goss_tests suites/common-kubernetes-tests-cluster.yaml --format json | \
            print_goss_json_results stdin ${master_test_urls} ${single_master_test_url} ${worker_test_urls} ${single_worker_test_url}
        rc=$?
    else
        echo
        echo $'\e[1;31m'WARNING: Unable to run local Kubernetes checks because ${kube_creds} does not exist or is invalid$'\e[0m'
        print_goss_json_results stdin ${master_test_urls} ${single_master_test_url} ${worker_test_urls} ${single_worker_test_url}
        rc=$?
    fi
else
    # run tests from an NCN

    # If not running on the PIT node, this should mean we are post-PIT-reboot, so add in the appropriate tests
    post_pit_single_master_test_url=$(goss_endpoint_urls ncn-afterpitreboot-kubernetes-tests-master-single.yaml ${ready_master_node}) ||
        err_exit "Error finding test URL for ncn-afterpitreboot-kubernetes-tests-master-single"

    post_pit_single_worker_test_url=$(goss_endpoint_urls ncn-afterpitreboot-kubernetes-tests-worker-single.yaml ${ready_worker_node}) ||
        err_exit "Error finding test URL for ncn-afterpitreboot-kubernetes-tests-worker-single"

    run_goss_tests suites/ncn-kubernetes-tests-cluster.yaml --format json | \
        print_goss_json_results stdin ${master_test_urls} ${single_master_test_url} ${post_pit_single_master_test_url} \
									  ${worker_test_urls} ${single_worker_test_url} ${post_pit_single_worker_test_url}
    rc=$?
fi

# This script does not exit with non-0 return code just for test failures
[[ $rc -le 1 ]] && exit 0
exit 1
