#!/usr/bin/env bash
#
# (C) Copyright 2021 Hewlett Packard Enterprise Development LP.
# Author: Forrest Jadick
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

function run_k8s_tests {
  export NODE=$1
  type=$2
  port=$3

  echo
  echo Running tests against NCN Kubernetes $type node $'\e[1;33m'$NODE$'\e[0m'
  url=http://$NODE:$port/ncn-kubernetes-tests-$type

  echo Server Endpoint: $url
  results=`curl -s {$url}`

  if [[ $? == 0 ]]; then
    if ! `echo $results | jq -e > /dev/null 2>&1`; then
      echo $'\e[1;31m'ERROR: Output not valid JSON$'\e[0m'
      return 1
    else
      echo $results | jq -c '.results | sort_by(.result) | .[] | tojson' | while read test; do
        # remove quotes around json string
        test=$(echo $test | sed 's/^.\(.*\).$/\1/')

        if ! `echo $test | jq '.result' > /dev/null 2>&1`; then
          echo
          echo $'\e[0m'Could not format test results JSON, so dumping raw output below.
          echo
          echo $test
          continue
        else
          result=`echo $test | jq '.result'`
        fi

        if [ -z $result ]; then
          continue
        elif [ $result == 0 ]; then
          result=PASS
          echo $'\e[1;32m'
        else
          result=FAIL
          echo $'\e[1;31m'
        fi

        title=`echo $test | jq -r '.title'`
        description=`echo $test | jq -r '.meta.desc'`
        severity=`echo $test | jq -r '.meta.sev'`
        summary=`echo $test | jq -r '."summary-line"'`
        time=`echo $test | jq -r '.duration'`
        time=`echo "scale=8; $time/1000000000" | bc | awk '{printf "%.8f\n", $0}'`

        echo "Result: $result"
        echo "Test Name: $title"
        echo "Description: $description"
        echo "Severity: $severity"
        echo "Test Summary: $summary"
        echo "Execution Time: $time seconds"
        echo "Node: $NODE"
      done
    fi

    echo $'\e[0m'

    total=`echo $results | jq -r '.summary."test-count"'`
    failed=`echo $results | jq -r '.summary."failed-count"'`
    time=`echo $results | jq -r '.summary."total-duration"'`
    time=`echo "scale=4; $time/1000000000" | bc | awk '{printf "%.4f\n", $0}'`

    echo "Total Tests: $total, Total Passed: $((total-failed)), Total Failed: $failed, Total Execution Time: $time seconds"
  else
    echo $'\e[1;31m'ERROR: Server endpoint could not be reached$'\e[0m'
  fi
  return 0
}

# master nodes
echo $'\e[1;33m'Master Node Kubernetes Checks$'\e[0m'
echo $'\e[1;33m'-----------------------------$'\e[0m'

# find the master node names and query the server endpoint
if [ -f "/etc/dnsmasq.d/statics.conf" ]; then
  cat /etc/dnsmasq.d/statics.conf | grep -ohE "ncn-m([0-9]{3})" | grep -v ncn-m001 | awk '!a[$0]++' | \
    while read node ; do run_k8s_tests "$node" "master" "8996" ; done
else
  cat /etc/hosts | grep -ohE "ncn-m([0-9]{3})" | awk '!a[$0]++' | while read node ; do run_k8s_tests "$node" "master" "8996" ; done
fi

# worker nodes
echo
echo $'\e[1;33m'Worker Node Kubernetes Checks$'\e[0m'
echo $'\e[1;33m'-----------------------------$'\e[0m'

# find the worker node names and query the server endpoint
if [ -f "/etc/dnsmasq.d/statics.conf" ]; then
  cat /etc/dnsmasq.d/statics.conf | grep -ohE "ncn-w([0-9]{3})" | grep -v ncn-m001 | awk '!a[$0]++' | \
    while read node ; do run_k8s_tests "$node" "worker" "8998" ; done
else
  cat /etc/hosts | grep -ohE "ncn-w([0-9]{3})" | awk '!a[$0]++' | while read node ; do run_k8s_tests "$node" "worker" "8998" ; done
fi

exit