@Library('csm-shared-library') _

def isStable = env.TAG_NAME != null || env.BRANCH_NAME == 'main' ? true : false
pipeline {
    agent {
        label "metal-gcp-builder"
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: "10"))
        timestamps()
    }

    environment {
        DESCRIPTION = "CSM automated testing"
        IS_STABLE = "${isStable}"
        BUILD_METADATA = getRpmRevision(isStable: isStable)
    }

    stages {
        stage("Prepare") {
            steps {
                sh "make rpm_prepare"
            }
        }

        stage("Build RPM 1") {
            steps {
                sh "make build-csm-testing"
            }
        }

        stage("Build RPM 2") {
            steps {
                sh "make build-goss-servers"
            }
        }

        stage('Publish ') {
            steps {
                script {
                    publishCsmRpms(component: getRepoName(), pattern: "dist/rpmbuild/RPMS/noarch/*.rpm", arch: "noarch", isStable: isStable)
                    publishCsmRpms(component: getRepoName(), pattern: "dist/rpmbuild/SRPMS/*.rpm", arch: "src", isStable: isStable)
                }
            }
        }
    }
}
