#!/usr/bin/env bash
# Attempts to network boot a single NCN from the LiveCD for testing purposes
#
# (C) Copyright 2021 Hewlett Packard Enterprise Development LP.
# Author: Forrest Jadick
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

[[ -z $GOSS_BASE ]] && export GOSS_BASE="/opt/cray/tests/install/livecd"

usage_info="pxe-boot-one-node [node name, ie ncn-m002] [IPMI password] [maximum boot retries]"

if [[ -z $1 ]]; then
  echo "ERROR! Command missing node name (ie, ncn-m002, ncn-s003, etc)."
  echo "Usage: $usage_info"
  exit 0
fi

if [[ -z $2 ]]; then
  echo "ERROR! Command missing IPMI password."
  echo "Usage: $usage_info"
  exit 0
fi

if [[ -z $3 ]]; then
  echo "ERROR! Command missing maximum boot retries."
  echo "Usage: $usage_info"
  exit 0
fi

node=$1
export IPMI_PASSWORD=$2
export MAX_BOOT_RETRIES=$3

export NODE_COUNT=$(grep -ohE "ncn-$type([0-3]{3})" /etc/dnsmasq.d/statics.conf | awk '!a[$0]++' | wc -l)
export NODE_NUM=1
export IPMI_USERNAME=root
export MAX_SSH_ATTEMPTS=100
export CONMAN_LOGS=/var/log/conman

source $GOSS_BASE/build-testing/boot-functions.sh

node_boot_attempt $node $MAX_BOOT_RETRIES